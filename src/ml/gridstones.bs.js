// Generated by BUCKLESCRIPT VERSION 4.0.14, PLEASE EDIT WITH CARE

import * as Utils from "./utils.bs.js";
import * as Belt_List from "../../node_modules/bs-platform/lib/es6/belt_List.js";
import * as Belt_Array from "../../node_modules/bs-platform/lib/es6/belt_Array.js";
import * as Board_utils from "./board_utils.bs.js";
import * as Deck_generator from "./deck_generator.bs.js";

function has_match(board_state, pattern) {
  var num_stones = Belt_Array.reduce(Belt_Array.concatMany(pattern), 0, (function (acc, slot) {
          if (slot === 1) {
            return acc + 1 | 0;
          } else {
            return acc;
          }
        }));
  return Belt_Array.some(Belt_Array.concatMany(Board_utils.conv(board_state, pattern)), (function (e) {
                return e === num_stones;
              }));
}

function matches_any_rot(board_state, pattern) {
  var matches_cur_board = function (p) {
    return has_match(board_state, p);
  };
  return Belt_List.some(Belt_List.map(Deck_generator.get_all_rots(pattern), matches_cur_board), (function (isMatch) {
                return isMatch;
              }));
}

function matches_any_pattern(board_state, patterns) {
  return Belt_Array.keep(Belt_Array.mapWithIndex(patterns, (function (i, pattern) {
                    return /* tuple */[
                            i,
                            matches_any_rot(board_state, pattern)
                          ];
                  })), (function (param) {
                return param[1];
              }));
}

function modify_slot(board_state, position, state) {
  var set_cur_board = function (x, y, value) {
    return Utils.set_unsafe(board_state, x, y, value);
  };
  switch (state) {
    case 0 : 
        set_cur_board(position[/* x */0], position[/* y */1], 1);
        return /* NEW */2;
    case 1 : 
        set_cur_board(position[/* x */0], position[/* y */1], 0);
        return /* EMPTY */0;
    case 2 : 
        return /* NEW */2;
    case 3 : 
        return /* LOCKED */3;
    
  }
}

export {
  has_match ,
  matches_any_rot ,
  matches_any_pattern ,
  modify_slot ,
  
}
/* Utils Not a pure module */
